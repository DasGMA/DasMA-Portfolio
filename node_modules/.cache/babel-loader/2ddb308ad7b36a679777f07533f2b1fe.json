{"ast":null,"code":"import _classCallCheck from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/BlogPostView.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Row } from 'react-materialize';\nimport axios from 'axios';\n/*import { MarkdownPreview } from 'react-marked-markdown'; */\n\nvar URL = 'http://ma:9000/posts/';\n\nvar BlogPostView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlogPostView, _Component);\n\n  function BlogPostView(props) {\n    var _this;\n\n    _classCallCheck(this, BlogPostView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogPostView).call(this, props));\n\n    _this.editLink = function () {\n      _this.props.history.push(\"/post-edit/\".concat(_this.state.id));\n    };\n\n    _this.state = {\n      id: '',\n      title: '',\n      content: '',\n      category: ''\n    };\n    return _this;\n  }\n\n  _createClass(BlogPostView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = Number(this.props.match.params.id);\n      axios.get(URL).then(function (response) {\n        console.log(response.data);\n        var matching = response.data.find(function (post) {\n          return post.id === id;\n        });\n\n        _this2.setState({\n          title: matching.title,\n          content: matching.content,\n          id: matching.id,\n          category: matching.category\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, localStorage.getItem('token') ? React.createElement(\"div\", {\n        className: \"button\",\n        onClick: this.editLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" Edit \") : null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.content), React.createElement(\"button\", {\n        onClick: this.props.back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return BlogPostView;\n}(Component);\n\nexport default withRouter(BlogPostView);","map":{"version":3,"sources":["/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/BlogPostView.js"],"names":["React","Component","Link","withRouter","Row","axios","URL","BlogPostView","props","editLink","history","push","state","id","title","content","category","Number","match","params","get","then","response","console","log","data","matching","find","post","setState","catch","err","localStorage","getItem","back"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;;AAEA,IAAMC,GAAG,GAAG,uBAAZ;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UA4BnBC,QA5BmB,GA4BR,YAAM;AACb,YAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,sBAAsC,MAAKC,KAAL,CAAWC,EAAjD;AACH,KA9BkB;;AAEf,UAAKD,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,EADK;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAFe;AAQlB;;;;wCAEmB;AAAA;;AAChB,UAAMH,EAAE,GAAGI,MAAM,CAAC,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBN,EAAzB,CAAjB;AACAR,MAAAA,KAAK,CAACe,GAAN,CAAUd,GAAV,EACKe,IADL,CACU,UAAAC,QAAQ,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,YAAMC,QAAQ,GAAGJ,QAAQ,CAACG,IAAT,CAAcE,IAAd,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACf,EAAL,KAAYA,EAAhB;AAAA,SAAvB,CAAjB;;AACA,QAAA,MAAI,CAACgB,QAAL,CAAc;AACVf,UAAAA,KAAK,EAAEY,QAAQ,CAACZ,KADN;AAEVC,UAAAA,OAAO,EAAEW,QAAQ,CAACX,OAFR;AAGVF,UAAAA,EAAE,EAAEa,QAAQ,CAACb,EAHH;AAIVG,UAAAA,QAAQ,EAAEU,QAAQ,CAACV;AAJT,SAAd;AAMH,OAVL,EAWKc,KAXL,CAWW,UAAAC,GAAG,EAAI;AACVR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,OAbL;AAcH;;;6BAMQ;AACL,aACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgC;AAAK,QAAA,SAAS,EAAG,QAAjB;AAA0B,QAAA,OAAO,EAAI,KAAKxB,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhC,GAAmG,IADxG,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKG,KAAL,CAAWE,KAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKF,KAAL,CAAWG,OAAf,CAHJ,EAKI;AAAQ,QAAA,OAAO,EAAI,KAAKP,KAAL,CAAW0B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADR;AASH;;;;EA3CsBjC,S;;AA8C3B,eAAeE,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row } from 'react-materialize';\r\nimport axios from 'axios';\r\n/*import { MarkdownPreview } from 'react-marked-markdown'; */\r\n\r\nconst URL = 'http://ma:9000/posts/';\r\n\r\nclass BlogPostView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            title: '',\r\n            content: '',\r\n            category: '',    \r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = Number(this.props.match.params.id);\r\n        axios.get(URL)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                const matching = response.data.find(post => post.id === id);\r\n                this.setState({\r\n                    title: matching.title,\r\n                    content: matching.content,\r\n                    id: matching.id,\r\n                    category: matching.category,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    editLink = () => {\r\n        this.props.history.push(`/post-edit/${this.state.id}`);\r\n    }\r\n    \r\n    render() {\r\n        return ( \r\n                <Row>\r\n                    {localStorage.getItem('token') ? <div className = 'button' onClick = {this.editLink}> Edit </div> : null}\r\n                    <h1>{this.state.title}</h1>\r\n                    <p>{this.state.content}</p>\r\n                {/*  <MarkdownPreview className='mark' value={this.state.content} /> */}\r\n                    <button onClick = {this.props.back}>Back</button>\r\n                </Row>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(BlogPostView);"]},"metadata":{},"sourceType":"module"}