{"ast":null,"code":"import _classCallCheck from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-materialize';\nimport Search from './Search';\nimport BlogPost from './BlogPost';\nimport BlogPostView from './BlogPostView';\nimport NewBlogPost from './NewBlogPost';\nvar URL = 'https://dasma-blog.herokuapp.com/posts';\n\nvar Blog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Blog, _Component);\n\n  function Blog(props) {\n    var _this;\n\n    _classCallCheck(this, Blog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Blog).call(this, props));\n\n    _this.handleSearch = function (event) {\n      _this.setState({\n        search: event.target.value,\n        posts: _this.state.searchPosts.filter(function (post) {\n          return new RegExp(event.target.value, \"i\").exec(post.title);\n        })\n      });\n    };\n\n    _this.newPost = function () {\n      _this.setState(function (prevState) {\n        return {\n          show: !prevState.show\n        };\n      });\n    };\n\n    _this.state = {\n      posts: [],\n      search: '',\n      searchPosts: [],\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(Blog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(URL).then(function (response) {\n        console.log(response.data);\n\n        _this2.setState({\n          posts: response.data,\n          searchPosts: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          posts = _this$state.posts,\n          search = _this$state.search;\n      var layout = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Search, {\n        handleSearch: this.handleSearch,\n        search: search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Col, {\n        s: 12,\n        m: 3,\n        style: {\n          color: '#fff',\n          border: '1px solid yellow'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Categories\"), React.createElement(Col, {\n        s: 12,\n        m: 9,\n        style: {\n          color: '#fff',\n          border: '1px solid yellow'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, posts.map(function (post) {\n        return React.createElement(BlogPost, {\n          key: post.id,\n          id: post.id,\n          title: post.title,\n          content: post.content,\n          category: post.category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"\".concat(this.props.match.path, \"/blogPost/:id\"),\n        component: BlogPostView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.newPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"New Post\"), this.state.show ? React.createElement(NewBlogPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }) : layout);\n    }\n  }]);\n\n  return Blog;\n}(Component);\n\nexport default Blog;","map":{"version":3,"sources":["/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/Blog.js"],"names":["React","Component","axios","Route","Container","Row","Col","Search","BlogPost","BlogPostView","NewBlogPost","URL","Blog","props","handleSearch","event","setState","search","target","value","posts","state","searchPosts","filter","post","RegExp","exec","title","newPost","prevState","show","get","then","response","console","log","data","catch","error","layout","color","border","map","id","content","category","match","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'react-materialize';\r\nimport Search from './Search';\r\nimport BlogPost from './BlogPost';\r\nimport BlogPostView from './BlogPostView';\r\nimport NewBlogPost from './NewBlogPost';\r\n\r\nconst URL = 'https://dasma-blog.herokuapp.com/posts';\r\n\r\nclass Blog extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            search: '',\r\n            searchPosts: [],\r\n            show: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.get(URL)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            this.setState({\r\n                posts: response.data,\r\n                searchPosts: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        this.setState ({\r\n          search: event.target.value,\r\n          posts: this.state.searchPosts.filter((post) => \r\n            new RegExp(event.target.value, \"i\").exec(post.title))\r\n        });\r\n    }\r\n\r\n    newPost = () => {\r\n        this.setState(prevState => ({\r\n            show: !prevState.show\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { posts, search } = this.state;\r\n        const layout =  <Row>\r\n                            <Search handleSearch = {this.handleSearch} search = {search}/>\r\n                            <Col s={12} m={3} style = {{color: '#fff', border: '1px solid yellow'}}>\r\n                             Categories\r\n                            </Col>\r\n\r\n                            <Col s={12} m={9} style = {{color: '#fff', border: '1px solid yellow'}}>\r\n                                {posts.map(post => {\r\n                                    return (\r\n                                        <BlogPost\r\n                                            key = {post.id}\r\n                                            id = {post.id}\r\n                                            title = {post.title}\r\n                                            content = {post.content}\r\n                                            category = {post.category}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            <Route path = {`${this.props.match.path}/blogPost/:id`} component = { BlogPostView } />\r\n                            </Col>\r\n                        </Row>\r\n\r\n        return (\r\n            <Container>\r\n                <button onClick = {this.newPost}>New Post</button>\r\n                \r\n                {this.state.show ? <NewBlogPost /> : layout}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blog;"]},"metadata":{},"sourceType":"module"}