{"ast":null,"code":"import _classCallCheck from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-materialize';\nimport Search from './Search';\nimport BlogPost from './BlogPost';\nimport BlogPostView from './BlogPostView';\nimport NewBlogPost from './NewBlogPost';\nimport Admin from './Admin';\nimport decode from 'jwt-decode';\nvar URL = 'http://ma:9000/posts';\n\nvar Blog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Blog, _Component);\n\n  function Blog(props) {\n    var _this;\n\n    _classCallCheck(this, Blog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Blog).call(this, props));\n\n    _this.getPosts = function () {\n      axios.get(URL).then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          posts: response.data,\n          searchPosts: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleSearch = function (event) {\n      _this.setState({\n        search: event.target.value,\n        posts: _this.state.searchPosts.filter(function (post) {\n          return new RegExp(event.target.value, \"i\").exec(post.title);\n        })\n      });\n    };\n\n    _this.newPost = function () {\n      _this.setState(function (prevState) {\n        return {\n          show: !prevState.show\n        };\n      });\n    };\n\n    _this.admin = function () {\n      _this.setState(function (prevState) {\n        return {\n          adminLogin: !prevState.adminLogin\n        };\n      });\n    };\n\n    _this.getToken = function () {\n      return localStorage.getItem('token');\n    };\n\n    _this.logout = function () {\n      localStorage.removeItem('token');\n    };\n\n    _this.loggedIn = function () {\n      var token = _this.getToken();\n\n      if (!!token && !_this.isTokenExpired(token)) {\n        _this.setState(function (prevState) {\n          return {\n            adminLoggedIn: !prevState.adminLoggedIn\n          };\n        });\n      }\n    };\n\n    _this.isTokenExpired = function (token) {\n      try {\n        var decoded = decode(token);\n\n        if (decoded.exp < Date.now() / 1000) {\n          return true;\n        } else {\n          return false;\n        }\n      } catch (error) {\n        return false;\n      }\n    };\n\n    _this.state = {\n      posts: [],\n      search: '',\n      searchPosts: [],\n      show: false,\n      adminLogin: false,\n      adminLoggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(Blog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPosts();\n      this.loggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.adminLoggedIn);\n      var _this$state = this.state,\n          posts = _this$state.posts,\n          search = _this$state.search;\n      var layout = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Search, {\n        handleSearch: this.handleSearch,\n        search: search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Col, {\n        s: 12,\n        m: 3,\n        style: {\n          color: '#fff',\n          border: '1px solid yellow'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Categories\"), React.createElement(Col, {\n        s: 12,\n        m: 9,\n        style: {\n          color: '#fff',\n          border: '1px solid yellow'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, posts.map(function (post) {\n        return React.createElement(BlogPost, {\n          key: post.id,\n          id: post.id,\n          title: post.title,\n          content: post.content,\n          category: post.category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"\".concat(this.props.match.path, \"/:id\"),\n        component: BlogPostView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })));\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.adminLoggedIn ? React.createElement(\"button\", {\n        onClick: this.newPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"New Post\") : null, this.state.adminLoggedIn ? React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Logout\") : React.createElement(\"button\", {\n        onClick: this.admin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Admin Login\"), this.state.show ? React.createElement(NewBlogPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }) : layout, this.state.adminLogin ? React.createElement(Admin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return Blog;\n}(Component);\n\nexport default Blog;","map":{"version":3,"sources":["/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/Blog.js"],"names":["React","Component","axios","Route","Container","Row","Col","Search","BlogPost","BlogPostView","NewBlogPost","Admin","decode","URL","Blog","props","getPosts","get","then","response","console","log","data","setState","posts","searchPosts","catch","error","handleSearch","event","search","target","value","state","filter","post","RegExp","exec","title","newPost","prevState","show","admin","adminLogin","getToken","localStorage","getItem","logout","removeItem","loggedIn","token","isTokenExpired","adminLoggedIn","decoded","exp","Date","now","layout","color","border","map","id","content","category","match","path"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'react-materialize';\r\nimport Search from './Search';\r\nimport BlogPost from './BlogPost';\r\nimport BlogPostView from './BlogPostView';\r\nimport NewBlogPost from './NewBlogPost';\r\nimport Admin from './Admin';\r\nimport decode from 'jwt-decode';\r\n\r\nconst URL = 'http://ma:9000/posts';\r\n\r\nclass Blog extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            search: '',\r\n            searchPosts: [],\r\n            show: false,\r\n            adminLogin: false,\r\n            adminLoggedIn: false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getPosts();\r\n        this.loggedIn();\r\n    }\r\n\r\n    getPosts = () => {\r\n        axios.get(URL)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            this.setState({\r\n                posts: response.data,\r\n                searchPosts: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        this.setState ({\r\n          search: event.target.value,\r\n          posts: this.state.searchPosts.filter((post) => \r\n            new RegExp(event.target.value, \"i\").exec(post.title))\r\n        });\r\n    }\r\n\r\n    newPost = () => {\r\n        this.setState(prevState => ({\r\n            show: !prevState.show\r\n        }));\r\n    }\r\n\r\n    admin = () => {\r\n        this.setState(prevState => ({\r\n            adminLogin: !prevState.adminLogin\r\n        }));\r\n    }\r\n\r\n    getToken = () => {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    loggedIn = () => {\r\n        const token = this.getToken();\r\n        if (!!token && !this.isTokenExpired(token)) {\r\n            this.setState(prevState => ({\r\n                adminLoggedIn: !prevState.adminLoggedIn\r\n            }));\r\n        }\r\n    }\r\n\r\n    isTokenExpired = (token) => {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        console.log(this.state.adminLoggedIn)\r\n        const { posts, search } = this.state;\r\n        const layout =  <Row>\r\n                            <Search handleSearch = {this.handleSearch} search = {search}/>\r\n                            <Col s={12} m={3} style = {{color: '#fff', border: '1px solid yellow'}}>\r\n                             Categories\r\n                            </Col>\r\n\r\n                            <Col s={12} m={9} style = {{color: '#fff', border: '1px solid yellow'}}>\r\n                                {posts.map(post => {\r\n                                    return (\r\n                                        <BlogPost\r\n                                            key = {post.id}\r\n                                            id = {post.id}\r\n                                            title = {post.title}\r\n                                            content = {post.content}\r\n                                            category = {post.category}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            <Route path = {`${this.props.match.path}/:id`} component = { BlogPostView } />\r\n                            </Col>\r\n                        </Row>\r\n\r\n        return (\r\n            <Container>\r\n                {this.state.adminLoggedIn ? <button onClick = {this.newPost}>New Post</button> : null }\r\n                { this.state.adminLoggedIn ? <button onClick = {this.logout}>Logout</button> : <button onClick = {this.admin}>Admin Login</button> }\r\n                \r\n                {this.state.show ? <NewBlogPost /> : layout}\r\n                {this.state.adminLogin ? <Admin /> : null}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blog;"]},"metadata":{},"sourceType":"module"}