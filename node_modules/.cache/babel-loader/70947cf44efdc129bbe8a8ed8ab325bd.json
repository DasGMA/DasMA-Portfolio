{"ast":null,"code":"import _classCallCheck from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/BlogPostView.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Row } from 'react-materialize';\nimport axios from 'axios';\n/*import { MarkdownPreview } from 'react-marked-markdown'; */\n\nvar URL = 'http://ma:9000/posts/';\n\nvar BlogPostView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlogPostView, _Component);\n\n  function BlogPostView(props) {\n    var _this;\n\n    _classCallCheck(this, BlogPostView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogPostView).call(this, props));\n\n    _this.delete = function (id) {\n      axios.delete(\"\".concat(URL).concat(id, \"/delete\")).then(function (response) {\n        _this.setState({\n          posts: response.data\n        });\n\n        window.location = '/blog';\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.linkToEdit = function () {\n      window.location = \"blog/post/edit-post/\".concat(_this.state.id);\n    };\n\n    _this.state = {\n      id: 0,\n      title: '',\n      content: ''\n    };\n    return _this;\n  }\n\n  _createClass(BlogPostView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = Number(this.props.match.params.id);\n      console.log(id, 'id');\n      axios.get(URL).then(function (response) {\n        var matching = response.data.find(function (post) {\n          return post.id === id;\n        });\n\n        _this2.setState({\n          id: matching.id,\n          title: matching.title,\n          content: matching.content\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, localStorage.getItem('token') ? React.createElement(\"button\", {\n        onClick: this.linkToEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Edit \") : null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.content), React.createElement(\"button\", {\n        onClick: this.props.back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return BlogPostView;\n}(Component);\n\nexport default withRouter(BlogPostView);","map":{"version":3,"sources":["/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/BlogPostView.js"],"names":["React","Component","Link","withRouter","Row","axios","URL","BlogPostView","props","delete","id","then","response","setState","posts","data","window","location","catch","error","console","log","linkToEdit","state","title","content","Number","match","params","get","matching","find","post","err","localStorage","getItem","back"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;;AAEA,IAAMC,GAAG,GAAG,uBAAZ;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UA4BnBC,MA5BmB,GA4BV,UAACC,EAAD,EAAQ;AACbL,MAAAA,KAAK,CAACI,MAAN,WAAgBH,GAAhB,SAAsBI,EAAtB,cACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AACd,cAAKC,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAEF,QAAQ,CAACG;AADN,SAAd;;AAGAC,QAAAA,MAAM,CAACC,QAAP,GAAkB,OAAlB;AACH,OAND,EAOCC,KAPD,CAOO,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OATD;AAUD,KAvCgB;;AAAA,UAyCjBG,UAzCiB,GAyCJ,YAAM;AACfN,MAAAA,MAAM,CAACC,QAAP,iCAAyC,MAAKM,KAAL,CAAWb,EAApD;AACH,KA3CgB;;AAEf,UAAKa,KAAL,GAAa;AACTb,MAAAA,EAAE,EAAE,CADK;AAETc,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAFe;AAOlB;;;;wCAEmB;AAAA;;AAChB,UAAMf,EAAE,GAAGgB,MAAM,CAAC,KAAKlB,KAAL,CAAWmB,KAAX,CAAiBC,MAAjB,CAAwBlB,EAAzB,CAAjB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,EAAZ,EAAgB,IAAhB;AACAL,MAAAA,KAAK,CAACwB,GAAN,CAAUvB,GAAV,EACKK,IADL,CACU,UAAAC,QAAQ,EAAI;AAEd,YAAMkB,QAAQ,GAAGlB,QAAQ,CAACG,IAAT,CAAcgB,IAAd,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACtB,EAAL,KAAYA,EAAhB;AAAA,SAAvB,CAAjB;;AAEA,QAAA,MAAI,CAACG,QAAL,CAAc;AACVH,UAAAA,EAAE,EAAEoB,QAAQ,CAACpB,EADH;AAEVc,UAAAA,KAAK,EAAEM,QAAQ,CAACN,KAFN;AAGVC,UAAAA,OAAO,EAAEK,QAAQ,CAACL;AAHR,SAAd;AAKH,OAVL,EAWKP,KAXL,CAWW,UAAAe,GAAG,EAAI;AACVb,QAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACH,OAbL;AAcH;;;6BAoBQ;AACLb,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACA,aACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKW,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgC;AAAQ,QAAA,OAAO,EAAI,KAAKb,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhC,GAAsF,IAD3F,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAWC,KAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKD,KAAL,CAAWE,OAAf,CAHJ,EAKI;AAAQ,QAAA,OAAO,EAAI,KAAKjB,KAAL,CAAW4B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADR;AASH;;;;EA1DsBnC,S;;AA6D3B,eAAeE,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row } from 'react-materialize';\r\nimport axios from 'axios';\r\n/*import { MarkdownPreview } from 'react-marked-markdown'; */\r\n\r\nconst URL = 'http://ma:9000/posts/';\r\n\r\nclass BlogPostView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 0,\r\n            title: '',\r\n            content: '' \r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = Number(this.props.match.params.id);\r\n        console.log(id, 'id')\r\n        axios.get(URL)\r\n            .then(response => {\r\n\r\n                const matching = response.data.find(post => post.id === id);\r\n\r\n                this.setState({\r\n                    id: matching.id,\r\n                    title: matching.title,\r\n                    content: matching.content,\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    delete = (id) => {\r\n        axios.delete(`${URL}${id}/delete`)\r\n        .then(response => {\r\n            this.setState({\r\n                posts: response.data\r\n            })\r\n            window.location = '/blog';\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n      }\r\n\r\n      linkToEdit = () => {\r\n          window.location = `blog/post/edit-post/${this.state.id}`\r\n      }\r\n\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        return ( \r\n                <Row>\r\n                    {localStorage.getItem('token') ? <button onClick = {this.linkToEdit}> Edit </button> : null}\r\n                    <h1>{this.state.title}</h1>\r\n                    <p>{this.state.content}</p>\r\n                {/*  <MarkdownPreview className='mark' value={this.state.content} /> */}\r\n                    <button onClick = {this.props.back}>Back</button>\r\n                </Row>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(BlogPostView);"]},"metadata":{},"sourceType":"module"}