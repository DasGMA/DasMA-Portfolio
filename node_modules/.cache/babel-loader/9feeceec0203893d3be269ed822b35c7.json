{"ast":null,"code":"import _classCallCheck from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/das/Desktop/DasMA-Portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Route } from 'react-router-dom';\nimport { Container } from 'react-materialize';\nimport BlogPostView from './BlogPostView';\nimport decode from 'jwt-decode';\nimport BlogPostList from './BlogPostList';\nimport EditBlogPost from './EditBlogPost';\nvar URL = 'http://ma:9000/posts';\n\nvar Blog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Blog, _Component);\n\n  function Blog(props) {\n    var _this;\n\n    _classCallCheck(this, Blog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Blog).call(this, props));\n\n    _this.getPosts = function () {\n      axios.get(URL).then(function (response) {\n        _this.setState({\n          posts: response.data,\n          searchPosts: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleSearch = function (event) {\n      _this.setState({\n        search: event.target.value,\n        posts: _this.state.searchPosts.filter(function (post) {\n          return new RegExp(event.target.value, \"i\").exec(post.title);\n        })\n      });\n    };\n\n    _this.newPost = function () {\n      _this.setState(function (prevState) {\n        return {\n          show: !prevState.show\n        };\n      });\n    };\n\n    _this.admin = function () {\n      _this.setState(function (prevState) {\n        return {\n          adminLogin: !prevState.adminLogin\n        };\n      });\n    };\n\n    _this.getToken = function () {\n      return localStorage.getItem('token');\n    };\n\n    _this.logout = function () {\n      localStorage.removeItem('token');\n\n      _this.setState({\n        adminLoggedIn: false\n      });\n    };\n\n    _this.loggedIn = function () {\n      var token = _this.getToken();\n\n      if (!!token && !_this.isTokenExpired(token)) {\n        _this.setState(function (prevState) {\n          return {\n            adminLoggedIn: !prevState.adminLoggedIn\n          };\n        });\n      }\n    };\n\n    _this.isTokenExpired = function (token) {\n      try {\n        var decoded = decode(token);\n\n        if (decoded.exp < Date.now() / 10000) {\n          return true;\n        } else {\n          return false;\n        }\n      } catch (error) {\n        return false;\n      }\n    };\n\n    _this.delete = function (id) {\n      axios.delete(\"\".concat(URL).concat(id, \"/delete\")).then(function (response) {\n        _this.setState({\n          posts: response.data\n        });\n\n        window.location = '/blog';\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.back = function () {\n      _this.props.history.push('/blog');\n    };\n\n    _this.state = {\n      posts: [],\n      search: '',\n      searchPosts: [],\n      show: false,\n      adminLogin: false,\n      adminLoggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(Blog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPosts();\n      this.loggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          posts = _this$state.posts,\n          search = _this$state.search;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.adminLoggedIn ? React.createElement(\"button\", {\n        onClick: this.newPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"New Post\") : null, this.state.adminLoggedIn ? React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Logout\") : React.createElement(\"button\", {\n        onClick: this.admin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Admin Login\"), React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(this.props.match.path),\n        render: function render(props) {\n          return React.createElement(BlogPostList, Object.assign({}, props, {\n            posts: posts,\n            handleSearch: _this2.handleSearch,\n            search: search,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(this.props.match.path, \"/post/:id\"),\n        render: function render(props) {\n          return React.createElement(BlogPostView, Object.assign({}, props, {\n            posts: posts,\n            delete: _this2.delete,\n            back: _this2.back,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(this.props.match.url, \"/edit-post/:id\"),\n        component: EditBlogPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Blog;\n}(Component);\n\nexport default Blog;","map":{"version":3,"sources":["/home/das/Desktop/DasMA-Portfolio/src/Components/Blog/Blog.js"],"names":["React","Component","axios","Route","Container","BlogPostView","decode","BlogPostList","EditBlogPost","URL","Blog","props","getPosts","get","then","response","setState","posts","data","searchPosts","catch","error","console","log","handleSearch","event","search","target","value","state","filter","post","RegExp","exec","title","newPost","prevState","show","admin","adminLogin","getToken","localStorage","getItem","logout","removeItem","adminLoggedIn","loggedIn","token","isTokenExpired","decoded","exp","Date","now","delete","id","window","location","back","history","push","match","path","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route } from 'react-router-dom';\r\nimport { Container} from 'react-materialize';\r\nimport BlogPostView from './BlogPostView';\r\nimport decode from 'jwt-decode';\r\nimport BlogPostList from './BlogPostList';\r\nimport EditBlogPost from './EditBlogPost';\r\n\r\nconst URL = 'http://ma:9000/posts';\r\n\r\nclass Blog extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            search: '',\r\n            searchPosts: [],\r\n            show: false,\r\n            adminLogin: false,\r\n            adminLoggedIn: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPosts();\r\n        this.loggedIn();\r\n    }\r\n\r\n    getPosts = () => {\r\n        axios.get(URL)\r\n        .then(response => {\r\n            this.setState({\r\n                posts: response.data,\r\n                searchPosts: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        this.setState ({\r\n          search: event.target.value,\r\n          posts: this.state.searchPosts.filter((post) => \r\n            new RegExp(event.target.value, \"i\").exec(post.title))\r\n        });\r\n    }\r\n\r\n    newPost = () => {\r\n        this.setState(prevState => ({\r\n            show: !prevState.show\r\n        }));\r\n    }\r\n\r\n    admin = () => {\r\n        this.setState(prevState => ({\r\n            adminLogin: !prevState.adminLogin\r\n        }));\r\n    }\r\n\r\n    getToken = () => {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('token');\r\n        this.setState({\r\n            adminLoggedIn: false\r\n        })\r\n    }\r\n\r\n    loggedIn = () => {\r\n        const token = this.getToken();\r\n        if (!!token && !this.isTokenExpired(token)) {\r\n            this.setState(prevState => ({\r\n                adminLoggedIn: !prevState.adminLoggedIn\r\n            }));\r\n        }\r\n    }\r\n\r\n    isTokenExpired = (token) => {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 10000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    delete = (id) => {\r\n        axios.delete(`${URL}${id}/delete`)\r\n        .then(response => {\r\n            this.setState({\r\n                posts: response.data\r\n            })\r\n            window.location = '/blog';\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n      }\r\n\r\n      back = () => {\r\n          this.props.history.push('/blog');\r\n      }\r\n    \r\n\r\n    render() {\r\n        const { posts, search } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                { this.state.adminLoggedIn ? <button onClick = {this.newPost}>New Post</button> : null }\r\n                { this.state.adminLoggedIn ? <button onClick = {this.logout}>Logout</button> : <button onClick = {this.admin}>Admin Login</button> }\r\n\r\n                <Route exact path = {`${this.props.match.path}`} render = {(props) => (\r\n                    <BlogPostList {...props} posts = {posts} handleSearch = {this.handleSearch} search = {search} />\r\n                )} />\r\n                \r\n                <Route path = {`${this.props.match.path}/post/:id`} render = {(props) => (\r\n                    <BlogPostView {...props} posts = {posts} delete = {this.delete} back = {this.back}/>\r\n                )} />\r\n\r\n                <Route path = {`${this.props.match.url}/edit-post/:id`} component = { EditBlogPost } />\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blog;"]},"metadata":{},"sourceType":"module"}